#textdomain wesnoth-tru

################################Suffix to unit declaration; prevents the unit from moving on any terrain but castle and villages
#define STUCK
    [+unit]
        [modifications]
            [object]
                [effect]
                    apply_to=movement_costs
                    replace=yes
                    [movement_costs]
                        shallow_water=99
                        reef=99
                        swamp_water=99
                        flat=99
                        sand=99
                        forest=99
                        hills=99
                        mountains=99
                        village=1
                        castle=1
                        cave=99
                        frozen=99
                        fungus=99
                    [/movement_costs]
                [/effect]
            [/object]
        [/modifications]
    [/unit]
#enddef

################################ Suffix to unit declaration; sets the variant of the unit
#define VARIANT V
    [+unit]
        variation={V}
    [/unit]
#enddef

################################Make orc/saurian units cost less upkeep, but take longer to advance
################################Great big thank-you to SotBE for the basis of this excellent macro
#define GOT_THE_GREAT_HORDE
    [event]
        name=prerecruit
        first_time_only=no
        [filter_second]
            side=1
        [/filter_second]
        [filter]
            race=orc
            [or]
                race=wolf
            [/or]
            [or]
                race=troll
            [/or]
            [or]
                race=lizard
            [/or]
        [/filter]
        {VARIABLE unit.upkeep $unit.level}
        {VARIABLE_OP unit.upkeep sub 1}
        {VARIABLE_OP unit.max_experience multiply 1.33}
        [unstore_unit]
            variable=unit
            find_vacant=no
        [/unstore_unit]
    [/event]
    [event]
        name=post advance
        first_time_only=no
        [filter]
            race=orc
            [or]
                race=wolf
            [/or]
            [or]
                race=troll
            [/or]
            [or]
                race=lizard
            [/or]
            side=1
        [/filter]
        {VARIABLE_OP unit.max_experience multiply 1.33}
        [if]
            [have_unit]
                x,y=$x1|,$y1
                [not]
                    [filter_wml]
                        [modifications]
                            [trait]
                                id=loyal
                            [/trait]
                        [/modifications]
                    [/filter_wml]
                [/not]
            [/have_unit]
            [then]
                {VARIABLE unit.upkeep $unit.level}
                {VARIABLE_OP unit.upkeep sub 1}
            [/then]
        [/if]
        [unstore_unit]
            variable=unit
            find_vacant=no
        [/unstore_unit]
    [/event]
#enddef
#define GREAT_HORDE_NOTE
    [note]
        description= _ "The Great Horde: upkeep cost of every orc, troll and saurian unit decreased by one."
    [/note]
#enddef

################################short cut for a bonfire
################################only valid for a default time schedule
#define BONFIRE X Y
    [item]
        x,y={X},{Y}
        halo=scenery/fire[1~8].png:100
    [/item]
    [time_area]
        x,y={X},{Y}
        radius=2
        [time]
            id=lit_dawn
            name= _ "Dawn"
            image=misc/time-schedules/schedule-lit-dawn.png
            lawful_bonus=25
        [/time]
        {MORNING}
        {AFTERNOON}
        [time]
            id=lit_dusk
            name= _ "Dusk"
            image=misc/time-schedules/schedule-lit-dusk.png
            lawful_bonus=25
        [/time]
        [time]
            id=lit_first_watch
            name= _ "First Watch"
            image=misc/time-schedules/schedule-lit-firstwatch.png
            green=-20
            blue=-20
        [/time]
        [time]
            id=lit_second_watch
            name= _ "Second Watch"
            image=misc/time-schedules/schedule-lit-secondwatch.png
            green=-20
            blue=-20
        [/time]
    [/time_area]
#enddef

################################ A neutral time for underground areas
#define SHALLOW_UNDERGROUND
    [time]
        id=shallow_underground
        name= _ "Dimly Lit Cave"
        image=misc/time-schedules/schedule-underground-illum.png
        lawful_bonus=0
    [/time]
#enddef

################################ Goal: Demons have the ability to darken the surrounding area as described below.
################################Because the [illuminates]value=<some negative number> doesn't work like it's supposed to, this ability only dumps the description on the unit.
#define ABILITY_ENSHADOWS
    [illuminates]
        id=enshadows
        value=0
        name= _ "enshadows"
        female_name= _ "female^enshadows"
        description= _ "This unit darkens the surrounding area, making chaotic units fight better, and lawful units fight worse.

Any units adjacent to this unit will fight as if it were dusk when it is day, and as if it were night when it is dusk."
    [/illuminates]
#enddef

################################The real thing that makes the enshadows ability work is here; this must be in the file of every unit w/this ability.
################################MANY REASONS that this won't work with unusually-timed scenarios. This can break existing time-areas, and won't work at all with unusual times, such as the 24-hour schedule or the extra-dark caves
#define ENABLE_ENSHADOWS
    [event]
        name=moveto
        id=enshadows_moveto
        first_time_only=no
        [filter]
            ability=enshadows
        [/filter]
        [fire_event]
            name=enshadow
        [/fire_event]
    [/event]
    [event]
        name=start
        id=enshadows_start
        [fire_event]
            name=enshadow
        [/fire_event]
    [/event]
    [event]
        name=die
        id=enshadows_die
        first_time_only=no
        [filter]
            ability=enshadows
        [/filter]
        [kill]
            x,y=$x1|,$y1
            animate=no
        [/kill]
        [fire_event]
            name=enshadow
        [/fire_event]
    [/event]
    [event]
        name=new turn
        id=enshadows_new_turn
        first_time_only=no
        [fire_event]
            name=enshadow
        [/fire_event]
    [/event]
    [event]
        name=enshadow
        id=enshadows_enshadow
        first_time_only=no
        [time_area]
            id=shadows
            remove=yes
        [/time_area]
        [store_time_of_day]
            variable=time
        [/store_time_of_day]
        [if]
            [variable]
                name=time.lawful_bonus
                equals=-25
            [/variable]
            [else]
                {VARIABLE_OP time.lawful_bonus sub 25}
                [time_area]
                    id=shadows
                    [filter]
                        ability=enshadows
                    [/filter]
                    radius=1
                    [time]
                        id=$time.id|-enshadowed
                        name=$time.name
                        image=misc/time-schedules/schedule-dark-$time.id|.png
                        lawful_bonus=$time.lawful_bonus
                        red=$time.red
                        blue=$time.blue
                        green=$time.green
                    [/time]
                [/time_area]
            [/else]
        [/if]
    [/event]
    [event]
        name=victory
        id=enshadows_victory
        {CLEAR_VARIABLE time}
    [/event]
#enddef

################################short cut for custom animations
#define FRAME IMAGE X Y
    [remove_item]
        x,y={X},{Y}
    [/remove_item]
    [item]
        x,y={X},{Y}
        halo={IMAGE}
    [/item]
    [redraw]
    [/redraw]
    [delay]
        time=25
    [/delay]
#enddef

################################similar short cut, but actually changes the map in the process
#define MAP_FRAME TERRAIN X Y
    [terrain]
        x,y={X},{Y}
        terrain={TERRAIN}
    [/terrain]
    [redraw]
    [/redraw]
    [delay]
        time=100
    [/delay]
#enddef
################################just like the previous, but changes 2 tiles at a time
#define MAP_TWO_FRAME TERRAIN X1 Y1 X2 Y2
    [terrain]
        x,y={X1},{Y1}
        terrain={TERRAIN}
    [/terrain]
    [terrain]
        x,y={X2},{Y2}
        terrain={TERRAIN}
    [/terrain]
    [redraw]
    [/redraw]
    [delay]
        time=100
    [/delay]
#enddef

################################Shortcut for messages
#define TRU_MESSAGE SPEAKER TRU_MESSAGE
    [message]
        speaker={SPEAKER}
        message={TRU_MESSAGE}
    [/message]
#enddef

################################Very useful shortcut for messages
################################Note: Does not work with "unit" or "second_unit" as the speaker; this isn't equiped to find the correct image
#define TRU_MESSAGE_RIGHT SPEAKER TRU_MESSAGE
    [store_unit]
        variable=message
        [filter]
            id={SPEAKER}
        [/filter]
    [/store_unit]
    [message]
        speaker={SPEAKER}
        image=$message.profile|~FL()~RIGHT()
        message={TRU_MESSAGE}
    [/message]
    {CLEAR_VARIABLE message}
#enddef

################################ One more message shortcut
#define TRU_MESSAGE_NARRATOR TRU_MESSAGE
    [message]
        speaker=narrator
        image="wesnoth-icon.png"
        message={TRU_MESSAGE}
    [/message]
#enddef

################################short cut for listing the many heroes in scenario objectives
#define LOSE_DEATH_OBJECTIVE NAME
    [objective]
        description= _ "Death of "+{NAME}
        condition=lose
    [/objective]
#enddef

################################ Another short cut for objectives
#define LAST_SCENARIO_TRU
    [note]
        description=_"This is the last scenario you will use this army in."
    [/note]
#enddef

################################ One more
#define NO_GOLD_CARRYOVER_TRU
    [note]
        description={NO_GOLD_CARRYOVER_NOTE}
    [/note]
#enddef

################################ Last one
#define EARLY_FINISH_BONUS_TRU
    [note]
        description={EARLY_FINISH_BONUS_NOTE}+{NEW_GOLD_CARRYOVER_NOTE_40}
    [/note]
#enddef

################################used to simulate an in-progress battle. Possible values for
################################"status" are full, high, low and poisoned. (full hp units are given some experience, just like other units)
#define TRU_GENERIC_UNIT SIDE TYPE X Y STATUS
    {VARIABLE status {STATUS}}
    [set_variable]
        name=experience
        rand=1..10
    [/set_variable]
    [switch]
        variable=status
        [case]
            value=high
            [unit]
                random_traits=no
                type={TYPE}
                to_variable=my_unit
            [/unit]
            {VARIABLE_OP my_unit.max_hitpoints divide 1.3}
            [+set_variable]
                round=floor
            [/set_variable]
            {VARIABLE_OP my_unit.hitpoints divide 1.9}
            [+set_variable]
                round=floor
            [/set_variable]
            {RANDOM $my_unit.hitpoints|..$my_unit.max_hitpoints|}
            {CREATE_THE_UNIT {SIDE} "{TYPE}" {X} {Y} ()}
        [/case]
        [case]
            value=low
            [unit]
                random_traits=no
                type={TYPE}
                to_variable=my_unit
            [/unit]
            {VARIABLE_OP my_unit.max_hitpoints divide 3}
            [+set_variable]
                round=floor
            [/set_variable]
            {VARIABLE_OP my_unit.hitpoints divide 4.5}
            [+set_variable]
                round=floor
            [/set_variable]
            {RANDOM $my_unit.hitpoints|..$my_unit.max_hitpoints|}
            {CREATE_THE_UNIT {SIDE} "{TYPE}" {X} {Y} ()}
        [/case]
        [case]
            value=full
            [unit]
                side={SIDE}
                type={TYPE}
                random_gender=yes
                experience=$experience
                random_traits=yes
                x={X}
                y={Y}
            [/unit]
        [/case]
        [case]
            value=poisoned
            [unit]
                random_traits=no
                type={TYPE}
                to_variable=my_unit
            [/unit]
            {VARIABLE_OP my_unit.max_hitpoints divide 1.5}
            [+set_variable]
                round=floor
            [/set_variable]
            {VARIABLE_OP my_unit.hitpoints divide 2.5}
            [+set_variable]
                round=floor
            [/set_variable]
            {RANDOM $my_unit.hitpoints|..$my_unit.max_hitpoints|}
            {CREATE_THE_UNIT {SIDE} "{TYPE}" {X} {Y} (
                [status]
                    poisoned=yes
                [/status]
            )}
        [/case]
    [/switch]
    {CLEAR_VARIABLE status}
    {CLEAR_VARIABLE my_unit}
    {CLEAR_VARIABLE experience}
    {CLEAR_VARIABLE random}
#enddef
#define CREATE_THE_UNIT SIDE TYPE X Y WML
    [unit]
        side={SIDE}
        type={TYPE}
        random_gender=yes
        hitpoints=$random
        experience=$experience
        random_traits=yes
        x={X}
        y={Y}
        {WML}
    [/unit]
#enddef

################################places an image of a ship, randomly deciding between 3 types
#define SHIP_AT X Y
    {RANDOM 1..3}
    [switch]
        variable=random
        [case]
            value=1
            {PLACE_IMAGE units/transport/galleon.png {X} {Y}}
        [/case]
        [case]
            value=2
            {PLACE_IMAGE units/transport/pirate-galleon.png {X} {Y}}
        [/case]
        [case]
            value=3
            {PLACE_IMAGE units/transport/transport-galleon.png {X} {Y}}
        [/case]
    [/switch]
    {CLEAR_VARIABLE random}
#enddef

################################creates a small pack of wolves centering around the specified hex
#define WOLF_PACK SIDE X Y
    {GENERIC_UNIT {SIDE} "Great Wolf" {X} {Y}}
    {GENERIC_UNIT {SIDE} "Wolf" {X} {Y}}
    {GENERIC_UNIT {SIDE} "Wolf" {X} {Y}}
    {GENERIC_UNIT {SIDE} "Wolf" {X} {Y}}
    {GENERIC_UNIT {SIDE} "Wolf" {X} {Y}}
    {GENERIC_UNIT {SIDE} "Wolf" {X} {Y}}
    {GENERIC_UNIT {SIDE} "Wolf" {X} {Y}}
#enddef
